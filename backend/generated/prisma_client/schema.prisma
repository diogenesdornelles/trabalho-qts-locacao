// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma_client"
}

model Brinquedo {
  cod               String            @id @default(uuid()) @db.Uuid
  nome              String            @unique @db.VarChar(255)
  tipo_brinquedo    String            @db.Uuid
  marca             String            @db.VarChar(255)
  data_aquisicao    DateTime          @db.Date
  valor_locacao     Decimal           @db.Money
  tipoBrinquedo     TipoBrinquedo     @relation(fields: [tipo_brinquedo], references: [cod])
  brinquedosLocados BrinquedoLocado[]

  @@map("brinquedos")
}

model BrinquedoLocado {
  cod            String    @id @default(uuid()) @db.Uuid
  valor_unitario Decimal   @db.Money
  nome           String    @db.VarChar(255)
  cod_locacao    String    @db.Uuid
  data_devolucao DateTime  @db.Date
  cod_brinquedo  String    @db.Uuid
  locacao        Locacao   @relation(fields: [cod_locacao], references: [cod])
  brinquedo      Brinquedo @relation(fields: [cod_brinquedo], references: [cod])

  @@map("brinquedos_locados")
}

model Cliente {
  cpf             String      @id @db.Char(11)
  nome            String      @db.VarChar(255)
  endereco        String      @db.VarChar(255)
  data_nascimento DateTime    @db.Date
  telefone        String      @db.VarChar(11)
  locacoes        Locacao[]
  pagamentos      Pagamento[]

  @@map("clientes")
}

enum Funcao {
  GERENTE
  CAIXA
  AGENTE_LOCACAO
  ANALISTA_CADASTRO
  ALMOXARIFE
}

model Funcionario {
  cpf      String @id @db.Char(11)
  nome     String @db.VarChar(255)
  telefone String @db.VarChar(11)
  funcao   Funcao
  senha    String @db.VarChar(128)

  @@map("funcionarios")
}

enum PgtoStatus {
  PENDENTE
  PAGO
  ATRASO
}

model Locacao {
  cod               String            @id @default(uuid()) @db.Uuid
  data_hora         DateTime          @default(now()) @db.Date
  cpf_cliente       String            @db.Char(11)
  pgto_status       PgtoStatus        @default(PENDENTE)
  brinquedosLocados BrinquedoLocado[]
  cliente           Cliente           @relation(fields: [cpf_cliente], references: [cpf])
  pagamento         Pagamento?

  @@map("locacoes")
}

model Pagamento {
  cod             String   @id @default(uuid()) @db.Uuid
  cpf_cliente     String   @db.Char(11)
  cod_locacao     String   @unique @db.Uuid
  data_pagamento  DateTime @default(now()) @db.Date
  valor_pagamento Decimal  @db.Money
  valor_locacao   Decimal  @db.Money
  locacao         Locacao  @relation(fields: [cod_locacao], references: [cod])
  cliente         Cliente  @relation(fields: [cpf_cliente], references: [cpf])

  @@map("pagamentos")
}

model TipoBrinquedo {
  cod        String      @id @default(uuid()) @db.Uuid
  nome       String      @unique @db.VarChar(255)
  brinquedos Brinquedo[]

  @@map("tipos_brinquedos")
}
